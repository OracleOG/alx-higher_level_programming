The ``0-add_integer`` module
============================

using ``add_integer``

importing function from the module
>>> add_integer = __import__('0-add_integer').add_integer

sum of two integers:
>>> add_integer(1, 2)
3

subtracting two integers
>>> add_integer(100, -2)
98

adding a float and 98
>>> add_integer(2.1)
100

adding a string and an integer
>>> add_integer('string', 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/oracleog/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 21, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

Passing None
    >>> add_integer(None)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Adding two letters
    >>> add_integer('2', '1')
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer


Adding a number and a list
    >>> add_integer(123, [])
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer
